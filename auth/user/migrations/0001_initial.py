# Generated by Django 3.0.5 on 2020-11-15 20:59

import datetime
from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('username', models.CharField(blank=True, max_length=400, null=True, verbose_name='username')),
                ('token', models.TextField(blank=True, verbose_name='Токен подтверждения регистрации')),
                ('default_language', models.CharField(default='en-US', max_length=100, verbose_name='Язык по уполчанию')),
                ('limit_video', models.IntegerField(default=1, verbose_name='Лимиты видео')),
                ('pay_tariff', models.CharField(choices=[('Trial', 'Trial'), ('Standart', 'Standart'), ('Elite', 'Elite')], default='Trial', max_length=100, verbose_name='Тариф')),
                ('pay_date', models.DateField(default=datetime.date(2020, 11, 15), verbose_name='Дата оплаты')),
                ('pay_time', models.TimeField(default=datetime.time(20, 59, 36, 875119), verbose_name='Время оплаты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserAccountManager()),
            ],
        ),
    ]
